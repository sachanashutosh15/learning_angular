Binding Syntax:
    - Interpolation / -> {{}}
    - Property Binding / -> <div [hidden]="isHidden">Div Content</div>
    - Event Binding / -> <button (click)="toggle()">Toggle</button>

Directives:
    - Directives are used to change the behaviour and appearance of DOM element.
    - Directives can implement all life cycle hooks.
    - Directives can not have template.

    Two types:
        - Structural Directives
        - Attribute Directives

    rooms?.availableRooms ?? "No rooms" / -> if rooms is defined and rooms.availableRooms
                                            is truthy value then that value else "No rooms"

    directives with * are structural directives
        - can add or remove elements from the DOM.
    directives without * are attribute directives
        - can modify the elements but can't add or remove elements.

    *ngIf, *ngFor, *ngSwich, ngClass, ngStyle

Pipes:
    - Pipes are used for data transformation.
    - Pipes don't change actual object.

    DatePipe, UpperCasePipe, LowerCasePipe, TitleCase CurrencyPipe, DecimalPipe, PercentPipe,
    JsonPipe, SlicePipe, AsyncPipe

    room.checkInTime | date

Adding styles:

    - npm i bootstrap
    - copy "bootstrap.min.css" file's path
  1.
    - add "@import 'path of bootstrap.min.css'"
  2.
    - add path in angular.json's styles array and restart server

Life cycle hooks:
    - ngOnInit() is used to initialize all the information which, the component needs,
      and without which it can't be rendered.

Component Interaction:
    - Using @Input and @Output
    - Using @ViewChild and @ContentChild
    - Using services
